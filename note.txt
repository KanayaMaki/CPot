●ヘッダにコードを書くメリット
	・プロジェクトのコンパイルするファイルに設定する必要がない
	→コードだけでビルド対象を切り替えることができる
	→マルチプラットフォームにはうってつけ

	・宣言と定義を同時にできるので、いろいろと変更しがちなクラスの作り始めは作業が早い
	？コード的にはよくない。そもそも変更が少ないように事前に設計すべき

inlineを使うと、defineのようにコードに埋め込まれる
→defineの代わりに使える

仮想関数をなくしてオーバーヘッドを減らすのはいいことだが、基底クラスで処理を共通化しづらくなる
→あまり頻繁に呼ばれないなら、仮想関数のままのほうがいい

実行時の処理速度
実行時の使用メモリ量
コンパイル時にかかる時間
保守の複雑さ
使うときの面倒さ



・
・テキストファイルを読み込んで、コンポーネントを追加する
・ライブラリを読み込むことで、コンポーネントの型を追加する

cbuffer Data : register(b0) {
	matrix World;
	matrix View;
	matrix Projection;
	matrix NorWorld;
}

layout(binding = 0, column_major) uniform Data {
  mat4x4  World;
	mat4x4  View;
	mat4x4  Proj;
	mat4x4  NorWorld;
};

Texture2D ToonTexture : register(t1);
SamplerState ToonSampler : register(s1);
→layout(binding = 1) uniform sampler2D ToonTexture;

ToonTexture.Sample(ToonSampler, float2(lighting, 1.0f - lighting));
→texture(ToonTexture, vec2(lighting, lighting));


matrix → mat4x4
float2 → vec2
float3 → vec3
float4 → vec4

#includeなら読み込まないといけない
